
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * Please import the `PrismaClient` class from the `client.ts` file instead.
 */

import * as runtime from "@prisma/client/runtime/client"
import type * as Prisma from "./prismaNamespace.js"


const config: runtime.GetPrismaClientConfig = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client"
    },
    "output": {
      "value": "C:\\Users\\lars.roald\\repos\\orm-benchmarks\\src\\prisma\\generated\\mssql",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "client"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\lars.roald\\repos\\orm-benchmarks\\src\\prisma\\schema-mssql.prisma",
    "isCustomOutput": true
  },
  "relativePath": "../..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlserver",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "MSSQL_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider   = \"prisma-client\" // ESM-first\n  engineType = \"client\" // No rust engines\n  output     = \"./generated/mssql\"\n}\n\ndatasource db {\n  provider = \"sqlserver\"\n  url      = env(\"MSSQL_URL\")\n}\n\nmodel Customer {\n  id           String  @id @map(\"id\")\n  companyName  String  @map(\"company_name\")\n  contactName  String  @map(\"contact_name\")\n  contactTitle String  @map(\"contact_title\")\n  address      String  @map(\"address\")\n  city         String  @map(\"city\")\n  postalCode   String? @map(\"postal_code\")\n  region       String? @map(\"region\")\n  country      String  @map(\"country\")\n  phone        String  @map(\"phone\")\n  fax          String? @map(\"fax\")\n  orders       Order[]\n\n  @@map(\"customers\")\n}\n\nmodel OrderDetail {\n  unitPrice Float  @map(\"unit_price\")\n  quantity  Int    @map(\"quantity\")\n  discount  Float  @map(\"discount\")\n  orderId   String @map(\"order_id\")\n  productId String @map(\"product_id\")\n\n  order   Order   @relation(fields: [orderId], references: [id])\n  product Product @relation(fields: [productId], references: [id])\n\n  @@id([orderId, productId])\n  @@map(\"order_details\")\n}\n\nmodel Employee {\n  id              String   @id @map(\"id\")\n  lastName        String   @map(\"last_name\")\n  firstName       String?  @map(\"first_name\")\n  title           String   @map(\"title\")\n  titleOfCourtesy String   @map(\"title_of_courtesy\")\n  birthDate       DateTime @map(\"birth_date\")\n  hireDate        DateTime @map(\"hire_date\")\n  address         String   @map(\"address\")\n  city            String   @map(\"city\")\n  postalCode      String   @map(\"postal_code\")\n  country         String   @map(\"country\")\n  homePhone       String   @map(\"home_phone\")\n  extension       Int      @map(\"extension\")\n  notes           String   @map(\"notes\")\n  recipientId     String?  @map(\"recipient_id\")\n  orders          Order[]\n\n  @@index([recipientId])\n  @@map(\"employees\")\n}\n\nmodel Order {\n  id             String    @id @map(\"id\")\n  orderDate      DateTime  @map(\"order_date\")\n  requiredDate   DateTime  @map(\"required_date\")\n  shippedDate    DateTime? @map(\"shipped_date\")\n  shipVia        Int       @map(\"ship_via\")\n  freight        Float     @map(\"freight\")\n  shipName       String    @map(\"ship_name\")\n  shipCity       String    @map(\"ship_city\")\n  shipRegion     String?   @map(\"ship_region\")\n  shipPostalCode String?   @map(\"ship_postal_code\")\n  shipCountry    String    @map(\"ship_country\")\n  customerId     String    @map(\"customer_id\")\n  employeeId     String    @map(\"employee_id\")\n\n  customer     Customer      @relation(fields: [customerId], references: [id])\n  employee     Employee      @relation(fields: [employeeId], references: [id])\n  orderDetails OrderDetail[]\n\n  @@index([customerId])\n  @@index([employeeId])\n  @@map(\"orders\")\n}\n\nmodel Product {\n  id           String @id @map(\"id\")\n  name         String @map(\"name\")\n  qtPerUnit    String @map(\"qt_per_unit\")\n  unitPrice    Float  @map(\"unit_price\")\n  unitsInStock Int    @map(\"units_in_stock\")\n  unitsOnOrder Int    @map(\"units_on_order\")\n  reorderLevel Int    @map(\"reorder_level\")\n  discontinued Int    @map(\"discontinued\")\n  supplierId   String @map(\"supplier_id\")\n\n  supplier     Supplier      @relation(fields: [supplierId], references: [id])\n  orderDetails OrderDetail[]\n\n  @@index([supplierId])\n  @@map(\"products\")\n}\n\nmodel Supplier {\n  id           String    @id @map(\"id\")\n  companyName  String    @map(\"company_name\")\n  contactName  String    @map(\"contact_name\")\n  contactTitle String    @map(\"contact_title\")\n  address      String    @map(\"address\")\n  city         String    @map(\"city\")\n  region       String?   @map(\"region\")\n  postalCode   String    @map(\"postal_code\")\n  country      String    @map(\"country\")\n  phone        String    @map(\"phone\")\n  products     Product[]\n\n  @@map(\"suppliers\")\n}\n",
  "inlineSchemaHash": "6bc162dd94b81560c6948cab0fd947c9a6bf8fc973304d7739bc59d7ac2bc1a8",
  "copyEngine": true,
  "runtimeDataModel": {
    "models": {},
    "enums": {},
    "types": {}
  },
  "dirname": ""
}

config.runtimeDataModel = JSON.parse("{\"models\":{\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"id\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"company_name\"},{\"name\":\"contactName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"contact_name\"},{\"name\":\"contactTitle\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"contact_title\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"address\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"city\"},{\"name\":\"postalCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"postal_code\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"region\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"country\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"phone\"},{\"name\":\"fax\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"fax\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"CustomerToOrder\"}],\"dbName\":\"customers\"},\"OrderDetail\":{\"fields\":[{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"unit_price\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"quantity\"},{\"name\":\"discount\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"discount\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"order_id\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_id\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderDetail\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrderDetailToProduct\"}],\"dbName\":\"order_details\"},\"Employee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"id\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"title\"},{\"name\":\"titleOfCourtesy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"title_of_courtesy\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"birth_date\"},{\"name\":\"hireDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"hire_date\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"address\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"city\"},{\"name\":\"postalCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"postal_code\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"country\"},{\"name\":\"homePhone\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"home_phone\"},{\"name\":\"extension\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"extension\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"notes\"},{\"name\":\"recipientId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"recipient_id\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"EmployeeToOrder\"}],\"dbName\":\"employees\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"id\"},{\"name\":\"orderDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"order_date\"},{\"name\":\"requiredDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"required_date\"},{\"name\":\"shippedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"shipped_date\"},{\"name\":\"shipVia\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"ship_via\"},{\"name\":\"freight\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"freight\"},{\"name\":\"shipName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ship_name\"},{\"name\":\"shipCity\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ship_city\"},{\"name\":\"shipRegion\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ship_region\"},{\"name\":\"shipPostalCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ship_postal_code\"},{\"name\":\"shipCountry\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ship_country\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"customer_id\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"employee_id\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToOrder\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToOrder\"},{\"name\":\"orderDetails\",\"kind\":\"object\",\"type\":\"OrderDetail\",\"relationName\":\"OrderToOrderDetail\"}],\"dbName\":\"orders\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"name\"},{\"name\":\"qtPerUnit\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"qt_per_unit\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"unit_price\"},{\"name\":\"unitsInStock\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"units_in_stock\"},{\"name\":\"unitsOnOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"units_on_order\"},{\"name\":\"reorderLevel\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"reorder_level\"},{\"name\":\"discontinued\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"discontinued\"},{\"name\":\"supplierId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"supplier_id\"},{\"name\":\"supplier\",\"kind\":\"object\",\"type\":\"Supplier\",\"relationName\":\"ProductToSupplier\"},{\"name\":\"orderDetails\",\"kind\":\"object\",\"type\":\"OrderDetail\",\"relationName\":\"OrderDetailToProduct\"}],\"dbName\":\"products\"},\"Supplier\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"id\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"company_name\"},{\"name\":\"contactName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"contact_name\"},{\"name\":\"contactTitle\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"contact_title\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"address\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"city\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"region\"},{\"name\":\"postalCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"postal_code\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"country\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"phone\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToSupplier\"}],\"dbName\":\"suppliers\"}},\"enums\":{},\"types\":{}}")
config.engineWasm = undefined

async function decodeBase64AsWasm(wasmBase64: string): Promise<WebAssembly.Module> {
  const { Buffer } = await import('node:buffer')
  const wasmArray = Buffer.from(wasmBase64, 'base64')
  return new WebAssembly.Module(wasmArray)
}

config.compilerWasm = {
  getRuntime: async () => await import("@prisma/client/runtime/query_compiler_bg.sqlserver.mjs"),

  getQueryCompilerWasmModule: async () => {
    const { wasm } = await import("@prisma/client/runtime/query_compiler_bg.sqlserver.wasm-base64.mjs")
    return await decodeBase64AsWasm(wasm)
  }
}




export type LogOptions<ClientOptions extends Prisma.PrismaClientOptions> =
  'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never

export interface PrismaClientConstructor {
    /**
   * ## Prisma Client
   * 
   * Type-safe database client for TypeScript
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Customers
   * const customers = await prisma.customer.findMany()
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  new <
    Options extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
    LogOpts extends LogOptions<Options> = LogOptions<Options>,
    OmitOpts extends Prisma.PrismaClientOptions['omit'] = Options extends { omit: infer U } ? U : Prisma.PrismaClientOptions['omit'],
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
  >(options?: Prisma.Subset<Options, Prisma.PrismaClientOptions> ): PrismaClient<LogOpts, OmitOpts, ExtArgs>
}

/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Customers
 * const customers = await prisma.customer.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */

export interface PrismaClient<
  in LogOpts extends Prisma.LogLevel = never,
  in out OmitOpts extends Prisma.PrismaClientOptions['omit'] = Prisma.PrismaClientOptions['omit'],
  in out ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

  $on<V extends LogOpts>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): runtime.Types.Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): runtime.Types.Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): runtime.Types.Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => runtime.Types.Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): runtime.Types.Utils.JsPromise<R>


  $extends: runtime.Types.Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<OmitOpts>, ExtArgs, runtime.Types.Utils.Call<Prisma.TypeMapCb<OmitOpts>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.customer`: Exposes CRUD operations for the **Customer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Customers
    * const customers = await prisma.customer.findMany()
    * ```
    */
  get customer(): Prisma.CustomerDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.orderDetail`: Exposes CRUD operations for the **OrderDetail** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderDetails
    * const orderDetails = await prisma.orderDetail.findMany()
    * ```
    */
  get orderDetail(): Prisma.OrderDetailDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.employee`: Exposes CRUD operations for the **Employee** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Employees
    * const employees = await prisma.employee.findMany()
    * ```
    */
  get employee(): Prisma.EmployeeDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.order`: Exposes CRUD operations for the **Order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.order.findMany()
    * ```
    */
  get order(): Prisma.OrderDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.supplier`: Exposes CRUD operations for the **Supplier** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Suppliers
    * const suppliers = await prisma.supplier.findMany()
    * ```
    */
  get supplier(): Prisma.SupplierDelegate<ExtArgs, { omit: OmitOpts }>;
}

export function getPrismaClientClass(dirname: string): PrismaClientConstructor {
  config.dirname = dirname
  return runtime.getPrismaClient(config) as unknown as PrismaClientConstructor
}
