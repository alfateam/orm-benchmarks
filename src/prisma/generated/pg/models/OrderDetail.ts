
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `OrderDetail` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model OrderDetail
 * 
 */
export type OrderDetailModel = runtime.Types.Result.DefaultSelection<Prisma.$OrderDetailPayload>

export type AggregateOrderDetail = {
  _count: OrderDetailCountAggregateOutputType | null
  _avg: OrderDetailAvgAggregateOutputType | null
  _sum: OrderDetailSumAggregateOutputType | null
  _min: OrderDetailMinAggregateOutputType | null
  _max: OrderDetailMaxAggregateOutputType | null
}

export type OrderDetailAvgAggregateOutputType = {
  unitPrice: number | null
  quantity: number | null
  discount: number | null
}

export type OrderDetailSumAggregateOutputType = {
  unitPrice: number | null
  quantity: number | null
  discount: number | null
}

export type OrderDetailMinAggregateOutputType = {
  unitPrice: number | null
  quantity: number | null
  discount: number | null
  orderId: string | null
  productId: string | null
}

export type OrderDetailMaxAggregateOutputType = {
  unitPrice: number | null
  quantity: number | null
  discount: number | null
  orderId: string | null
  productId: string | null
}

export type OrderDetailCountAggregateOutputType = {
  unitPrice: number
  quantity: number
  discount: number
  orderId: number
  productId: number
  _all: number
}


export type OrderDetailAvgAggregateInputType = {
  unitPrice?: true
  quantity?: true
  discount?: true
}

export type OrderDetailSumAggregateInputType = {
  unitPrice?: true
  quantity?: true
  discount?: true
}

export type OrderDetailMinAggregateInputType = {
  unitPrice?: true
  quantity?: true
  discount?: true
  orderId?: true
  productId?: true
}

export type OrderDetailMaxAggregateInputType = {
  unitPrice?: true
  quantity?: true
  discount?: true
  orderId?: true
  productId?: true
}

export type OrderDetailCountAggregateInputType = {
  unitPrice?: true
  quantity?: true
  discount?: true
  orderId?: true
  productId?: true
  _all?: true
}

export type OrderDetailAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which OrderDetail to aggregate.
   */
  where?: Prisma.OrderDetailWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OrderDetails to fetch.
   */
  orderBy?: Prisma.OrderDetailOrderByWithRelationInput | Prisma.OrderDetailOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.OrderDetailWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OrderDetails from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OrderDetails.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned OrderDetails
  **/
  _count?: true | OrderDetailCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: OrderDetailAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: OrderDetailSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: OrderDetailMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: OrderDetailMaxAggregateInputType
}

export type GetOrderDetailAggregateType<T extends OrderDetailAggregateArgs> = {
      [P in keyof T & keyof AggregateOrderDetail]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOrderDetail[P]>
    : Prisma.GetScalarType<T[P], AggregateOrderDetail[P]>
}




export type OrderDetailGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OrderDetailWhereInput
  orderBy?: Prisma.OrderDetailOrderByWithAggregationInput | Prisma.OrderDetailOrderByWithAggregationInput[]
  by: Prisma.OrderDetailScalarFieldEnum[] | Prisma.OrderDetailScalarFieldEnum
  having?: Prisma.OrderDetailScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: OrderDetailCountAggregateInputType | true
  _avg?: OrderDetailAvgAggregateInputType
  _sum?: OrderDetailSumAggregateInputType
  _min?: OrderDetailMinAggregateInputType
  _max?: OrderDetailMaxAggregateInputType
}

export type OrderDetailGroupByOutputType = {
  unitPrice: number
  quantity: number
  discount: number
  orderId: string
  productId: string
  _count: OrderDetailCountAggregateOutputType | null
  _avg: OrderDetailAvgAggregateOutputType | null
  _sum: OrderDetailSumAggregateOutputType | null
  _min: OrderDetailMinAggregateOutputType | null
  _max: OrderDetailMaxAggregateOutputType | null
}

type GetOrderDetailGroupByPayload<T extends OrderDetailGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<OrderDetailGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof OrderDetailGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], OrderDetailGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], OrderDetailGroupByOutputType[P]>
      }
    >
  >



export type OrderDetailWhereInput = {
  AND?: Prisma.OrderDetailWhereInput | Prisma.OrderDetailWhereInput[]
  OR?: Prisma.OrderDetailWhereInput[]
  NOT?: Prisma.OrderDetailWhereInput | Prisma.OrderDetailWhereInput[]
  unitPrice?: Prisma.FloatFilter<"OrderDetail"> | number
  quantity?: Prisma.IntFilter<"OrderDetail"> | number
  discount?: Prisma.FloatFilter<"OrderDetail"> | number
  orderId?: Prisma.StringFilter<"OrderDetail"> | string
  productId?: Prisma.StringFilter<"OrderDetail"> | string
  order?: Prisma.XOR<Prisma.OrderScalarRelationFilter, Prisma.OrderWhereInput>
  product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.ProductWhereInput>
}

export type OrderDetailOrderByWithRelationInput = {
  unitPrice?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  discount?: Prisma.SortOrder
  orderId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  order?: Prisma.OrderOrderByWithRelationInput
  product?: Prisma.ProductOrderByWithRelationInput
}

export type OrderDetailWhereUniqueInput = Prisma.AtLeast<{
  orderId_productId?: Prisma.OrderDetailOrderIdProductIdCompoundUniqueInput
  AND?: Prisma.OrderDetailWhereInput | Prisma.OrderDetailWhereInput[]
  OR?: Prisma.OrderDetailWhereInput[]
  NOT?: Prisma.OrderDetailWhereInput | Prisma.OrderDetailWhereInput[]
  unitPrice?: Prisma.FloatFilter<"OrderDetail"> | number
  quantity?: Prisma.IntFilter<"OrderDetail"> | number
  discount?: Prisma.FloatFilter<"OrderDetail"> | number
  orderId?: Prisma.StringFilter<"OrderDetail"> | string
  productId?: Prisma.StringFilter<"OrderDetail"> | string
  order?: Prisma.XOR<Prisma.OrderScalarRelationFilter, Prisma.OrderWhereInput>
  product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.ProductWhereInput>
}, "orderId_productId">

export type OrderDetailOrderByWithAggregationInput = {
  unitPrice?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  discount?: Prisma.SortOrder
  orderId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  _count?: Prisma.OrderDetailCountOrderByAggregateInput
  _avg?: Prisma.OrderDetailAvgOrderByAggregateInput
  _max?: Prisma.OrderDetailMaxOrderByAggregateInput
  _min?: Prisma.OrderDetailMinOrderByAggregateInput
  _sum?: Prisma.OrderDetailSumOrderByAggregateInput
}

export type OrderDetailScalarWhereWithAggregatesInput = {
  AND?: Prisma.OrderDetailScalarWhereWithAggregatesInput | Prisma.OrderDetailScalarWhereWithAggregatesInput[]
  OR?: Prisma.OrderDetailScalarWhereWithAggregatesInput[]
  NOT?: Prisma.OrderDetailScalarWhereWithAggregatesInput | Prisma.OrderDetailScalarWhereWithAggregatesInput[]
  unitPrice?: Prisma.FloatWithAggregatesFilter<"OrderDetail"> | number
  quantity?: Prisma.IntWithAggregatesFilter<"OrderDetail"> | number
  discount?: Prisma.FloatWithAggregatesFilter<"OrderDetail"> | number
  orderId?: Prisma.StringWithAggregatesFilter<"OrderDetail"> | string
  productId?: Prisma.StringWithAggregatesFilter<"OrderDetail"> | string
}

export type OrderDetailCreateInput = {
  unitPrice: number
  quantity: number
  discount: number
  order: Prisma.OrderCreateNestedOneWithoutOrderDetailsInput
  product: Prisma.ProductCreateNestedOneWithoutOrderDetailsInput
}

export type OrderDetailUncheckedCreateInput = {
  unitPrice: number
  quantity: number
  discount: number
  orderId: string
  productId: string
}

export type OrderDetailUpdateInput = {
  unitPrice?: Prisma.FloatFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  discount?: Prisma.FloatFieldUpdateOperationsInput | number
  order?: Prisma.OrderUpdateOneRequiredWithoutOrderDetailsNestedInput
  product?: Prisma.ProductUpdateOneRequiredWithoutOrderDetailsNestedInput
}

export type OrderDetailUncheckedUpdateInput = {
  unitPrice?: Prisma.FloatFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  discount?: Prisma.FloatFieldUpdateOperationsInput | number
  orderId?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type OrderDetailCreateManyInput = {
  unitPrice: number
  quantity: number
  discount: number
  orderId: string
  productId: string
}

export type OrderDetailUpdateManyMutationInput = {
  unitPrice?: Prisma.FloatFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  discount?: Prisma.FloatFieldUpdateOperationsInput | number
}

export type OrderDetailUncheckedUpdateManyInput = {
  unitPrice?: Prisma.FloatFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  discount?: Prisma.FloatFieldUpdateOperationsInput | number
  orderId?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type OrderDetailOrderIdProductIdCompoundUniqueInput = {
  orderId: string
  productId: string
}

export type OrderDetailCountOrderByAggregateInput = {
  unitPrice?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  discount?: Prisma.SortOrder
  orderId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
}

export type OrderDetailAvgOrderByAggregateInput = {
  unitPrice?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  discount?: Prisma.SortOrder
}

export type OrderDetailMaxOrderByAggregateInput = {
  unitPrice?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  discount?: Prisma.SortOrder
  orderId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
}

export type OrderDetailMinOrderByAggregateInput = {
  unitPrice?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  discount?: Prisma.SortOrder
  orderId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
}

export type OrderDetailSumOrderByAggregateInput = {
  unitPrice?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  discount?: Prisma.SortOrder
}

export type OrderDetailListRelationFilter = {
  every?: Prisma.OrderDetailWhereInput
  some?: Prisma.OrderDetailWhereInput
  none?: Prisma.OrderDetailWhereInput
}

export type OrderDetailOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type FloatFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type OrderDetailCreateNestedManyWithoutOrderInput = {
  create?: Prisma.XOR<Prisma.OrderDetailCreateWithoutOrderInput, Prisma.OrderDetailUncheckedCreateWithoutOrderInput> | Prisma.OrderDetailCreateWithoutOrderInput[] | Prisma.OrderDetailUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.OrderDetailCreateOrConnectWithoutOrderInput | Prisma.OrderDetailCreateOrConnectWithoutOrderInput[]
  createMany?: Prisma.OrderDetailCreateManyOrderInputEnvelope
  connect?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
}

export type OrderDetailUncheckedCreateNestedManyWithoutOrderInput = {
  create?: Prisma.XOR<Prisma.OrderDetailCreateWithoutOrderInput, Prisma.OrderDetailUncheckedCreateWithoutOrderInput> | Prisma.OrderDetailCreateWithoutOrderInput[] | Prisma.OrderDetailUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.OrderDetailCreateOrConnectWithoutOrderInput | Prisma.OrderDetailCreateOrConnectWithoutOrderInput[]
  createMany?: Prisma.OrderDetailCreateManyOrderInputEnvelope
  connect?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
}

export type OrderDetailUpdateManyWithoutOrderNestedInput = {
  create?: Prisma.XOR<Prisma.OrderDetailCreateWithoutOrderInput, Prisma.OrderDetailUncheckedCreateWithoutOrderInput> | Prisma.OrderDetailCreateWithoutOrderInput[] | Prisma.OrderDetailUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.OrderDetailCreateOrConnectWithoutOrderInput | Prisma.OrderDetailCreateOrConnectWithoutOrderInput[]
  upsert?: Prisma.OrderDetailUpsertWithWhereUniqueWithoutOrderInput | Prisma.OrderDetailUpsertWithWhereUniqueWithoutOrderInput[]
  createMany?: Prisma.OrderDetailCreateManyOrderInputEnvelope
  set?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  disconnect?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  delete?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  connect?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  update?: Prisma.OrderDetailUpdateWithWhereUniqueWithoutOrderInput | Prisma.OrderDetailUpdateWithWhereUniqueWithoutOrderInput[]
  updateMany?: Prisma.OrderDetailUpdateManyWithWhereWithoutOrderInput | Prisma.OrderDetailUpdateManyWithWhereWithoutOrderInput[]
  deleteMany?: Prisma.OrderDetailScalarWhereInput | Prisma.OrderDetailScalarWhereInput[]
}

export type OrderDetailUncheckedUpdateManyWithoutOrderNestedInput = {
  create?: Prisma.XOR<Prisma.OrderDetailCreateWithoutOrderInput, Prisma.OrderDetailUncheckedCreateWithoutOrderInput> | Prisma.OrderDetailCreateWithoutOrderInput[] | Prisma.OrderDetailUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.OrderDetailCreateOrConnectWithoutOrderInput | Prisma.OrderDetailCreateOrConnectWithoutOrderInput[]
  upsert?: Prisma.OrderDetailUpsertWithWhereUniqueWithoutOrderInput | Prisma.OrderDetailUpsertWithWhereUniqueWithoutOrderInput[]
  createMany?: Prisma.OrderDetailCreateManyOrderInputEnvelope
  set?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  disconnect?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  delete?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  connect?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  update?: Prisma.OrderDetailUpdateWithWhereUniqueWithoutOrderInput | Prisma.OrderDetailUpdateWithWhereUniqueWithoutOrderInput[]
  updateMany?: Prisma.OrderDetailUpdateManyWithWhereWithoutOrderInput | Prisma.OrderDetailUpdateManyWithWhereWithoutOrderInput[]
  deleteMany?: Prisma.OrderDetailScalarWhereInput | Prisma.OrderDetailScalarWhereInput[]
}

export type OrderDetailCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.OrderDetailCreateWithoutProductInput, Prisma.OrderDetailUncheckedCreateWithoutProductInput> | Prisma.OrderDetailCreateWithoutProductInput[] | Prisma.OrderDetailUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.OrderDetailCreateOrConnectWithoutProductInput | Prisma.OrderDetailCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.OrderDetailCreateManyProductInputEnvelope
  connect?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
}

export type OrderDetailUncheckedCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.OrderDetailCreateWithoutProductInput, Prisma.OrderDetailUncheckedCreateWithoutProductInput> | Prisma.OrderDetailCreateWithoutProductInput[] | Prisma.OrderDetailUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.OrderDetailCreateOrConnectWithoutProductInput | Prisma.OrderDetailCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.OrderDetailCreateManyProductInputEnvelope
  connect?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
}

export type OrderDetailUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.OrderDetailCreateWithoutProductInput, Prisma.OrderDetailUncheckedCreateWithoutProductInput> | Prisma.OrderDetailCreateWithoutProductInput[] | Prisma.OrderDetailUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.OrderDetailCreateOrConnectWithoutProductInput | Prisma.OrderDetailCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.OrderDetailUpsertWithWhereUniqueWithoutProductInput | Prisma.OrderDetailUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.OrderDetailCreateManyProductInputEnvelope
  set?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  disconnect?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  delete?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  connect?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  update?: Prisma.OrderDetailUpdateWithWhereUniqueWithoutProductInput | Prisma.OrderDetailUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.OrderDetailUpdateManyWithWhereWithoutProductInput | Prisma.OrderDetailUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.OrderDetailScalarWhereInput | Prisma.OrderDetailScalarWhereInput[]
}

export type OrderDetailUncheckedUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.OrderDetailCreateWithoutProductInput, Prisma.OrderDetailUncheckedCreateWithoutProductInput> | Prisma.OrderDetailCreateWithoutProductInput[] | Prisma.OrderDetailUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.OrderDetailCreateOrConnectWithoutProductInput | Prisma.OrderDetailCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.OrderDetailUpsertWithWhereUniqueWithoutProductInput | Prisma.OrderDetailUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.OrderDetailCreateManyProductInputEnvelope
  set?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  disconnect?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  delete?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  connect?: Prisma.OrderDetailWhereUniqueInput | Prisma.OrderDetailWhereUniqueInput[]
  update?: Prisma.OrderDetailUpdateWithWhereUniqueWithoutProductInput | Prisma.OrderDetailUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.OrderDetailUpdateManyWithWhereWithoutProductInput | Prisma.OrderDetailUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.OrderDetailScalarWhereInput | Prisma.OrderDetailScalarWhereInput[]
}

export type OrderDetailCreateWithoutOrderInput = {
  unitPrice: number
  quantity: number
  discount: number
  product: Prisma.ProductCreateNestedOneWithoutOrderDetailsInput
}

export type OrderDetailUncheckedCreateWithoutOrderInput = {
  unitPrice: number
  quantity: number
  discount: number
  productId: string
}

export type OrderDetailCreateOrConnectWithoutOrderInput = {
  where: Prisma.OrderDetailWhereUniqueInput
  create: Prisma.XOR<Prisma.OrderDetailCreateWithoutOrderInput, Prisma.OrderDetailUncheckedCreateWithoutOrderInput>
}

export type OrderDetailCreateManyOrderInputEnvelope = {
  data: Prisma.OrderDetailCreateManyOrderInput | Prisma.OrderDetailCreateManyOrderInput[]
  skipDuplicates?: boolean
}

export type OrderDetailUpsertWithWhereUniqueWithoutOrderInput = {
  where: Prisma.OrderDetailWhereUniqueInput
  update: Prisma.XOR<Prisma.OrderDetailUpdateWithoutOrderInput, Prisma.OrderDetailUncheckedUpdateWithoutOrderInput>
  create: Prisma.XOR<Prisma.OrderDetailCreateWithoutOrderInput, Prisma.OrderDetailUncheckedCreateWithoutOrderInput>
}

export type OrderDetailUpdateWithWhereUniqueWithoutOrderInput = {
  where: Prisma.OrderDetailWhereUniqueInput
  data: Prisma.XOR<Prisma.OrderDetailUpdateWithoutOrderInput, Prisma.OrderDetailUncheckedUpdateWithoutOrderInput>
}

export type OrderDetailUpdateManyWithWhereWithoutOrderInput = {
  where: Prisma.OrderDetailScalarWhereInput
  data: Prisma.XOR<Prisma.OrderDetailUpdateManyMutationInput, Prisma.OrderDetailUncheckedUpdateManyWithoutOrderInput>
}

export type OrderDetailScalarWhereInput = {
  AND?: Prisma.OrderDetailScalarWhereInput | Prisma.OrderDetailScalarWhereInput[]
  OR?: Prisma.OrderDetailScalarWhereInput[]
  NOT?: Prisma.OrderDetailScalarWhereInput | Prisma.OrderDetailScalarWhereInput[]
  unitPrice?: Prisma.FloatFilter<"OrderDetail"> | number
  quantity?: Prisma.IntFilter<"OrderDetail"> | number
  discount?: Prisma.FloatFilter<"OrderDetail"> | number
  orderId?: Prisma.StringFilter<"OrderDetail"> | string
  productId?: Prisma.StringFilter<"OrderDetail"> | string
}

export type OrderDetailCreateWithoutProductInput = {
  unitPrice: number
  quantity: number
  discount: number
  order: Prisma.OrderCreateNestedOneWithoutOrderDetailsInput
}

export type OrderDetailUncheckedCreateWithoutProductInput = {
  unitPrice: number
  quantity: number
  discount: number
  orderId: string
}

export type OrderDetailCreateOrConnectWithoutProductInput = {
  where: Prisma.OrderDetailWhereUniqueInput
  create: Prisma.XOR<Prisma.OrderDetailCreateWithoutProductInput, Prisma.OrderDetailUncheckedCreateWithoutProductInput>
}

export type OrderDetailCreateManyProductInputEnvelope = {
  data: Prisma.OrderDetailCreateManyProductInput | Prisma.OrderDetailCreateManyProductInput[]
  skipDuplicates?: boolean
}

export type OrderDetailUpsertWithWhereUniqueWithoutProductInput = {
  where: Prisma.OrderDetailWhereUniqueInput
  update: Prisma.XOR<Prisma.OrderDetailUpdateWithoutProductInput, Prisma.OrderDetailUncheckedUpdateWithoutProductInput>
  create: Prisma.XOR<Prisma.OrderDetailCreateWithoutProductInput, Prisma.OrderDetailUncheckedCreateWithoutProductInput>
}

export type OrderDetailUpdateWithWhereUniqueWithoutProductInput = {
  where: Prisma.OrderDetailWhereUniqueInput
  data: Prisma.XOR<Prisma.OrderDetailUpdateWithoutProductInput, Prisma.OrderDetailUncheckedUpdateWithoutProductInput>
}

export type OrderDetailUpdateManyWithWhereWithoutProductInput = {
  where: Prisma.OrderDetailScalarWhereInput
  data: Prisma.XOR<Prisma.OrderDetailUpdateManyMutationInput, Prisma.OrderDetailUncheckedUpdateManyWithoutProductInput>
}

export type OrderDetailCreateManyOrderInput = {
  unitPrice: number
  quantity: number
  discount: number
  productId: string
}

export type OrderDetailUpdateWithoutOrderInput = {
  unitPrice?: Prisma.FloatFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  discount?: Prisma.FloatFieldUpdateOperationsInput | number
  product?: Prisma.ProductUpdateOneRequiredWithoutOrderDetailsNestedInput
}

export type OrderDetailUncheckedUpdateWithoutOrderInput = {
  unitPrice?: Prisma.FloatFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  discount?: Prisma.FloatFieldUpdateOperationsInput | number
  productId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type OrderDetailUncheckedUpdateManyWithoutOrderInput = {
  unitPrice?: Prisma.FloatFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  discount?: Prisma.FloatFieldUpdateOperationsInput | number
  productId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type OrderDetailCreateManyProductInput = {
  unitPrice: number
  quantity: number
  discount: number
  orderId: string
}

export type OrderDetailUpdateWithoutProductInput = {
  unitPrice?: Prisma.FloatFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  discount?: Prisma.FloatFieldUpdateOperationsInput | number
  order?: Prisma.OrderUpdateOneRequiredWithoutOrderDetailsNestedInput
}

export type OrderDetailUncheckedUpdateWithoutProductInput = {
  unitPrice?: Prisma.FloatFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  discount?: Prisma.FloatFieldUpdateOperationsInput | number
  orderId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type OrderDetailUncheckedUpdateManyWithoutProductInput = {
  unitPrice?: Prisma.FloatFieldUpdateOperationsInput | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  discount?: Prisma.FloatFieldUpdateOperationsInput | number
  orderId?: Prisma.StringFieldUpdateOperationsInput | string
}



export type OrderDetailSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  unitPrice?: boolean
  quantity?: boolean
  discount?: boolean
  orderId?: boolean
  productId?: boolean
  order?: boolean | Prisma.OrderDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["orderDetail"]>

export type OrderDetailSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  unitPrice?: boolean
  quantity?: boolean
  discount?: boolean
  orderId?: boolean
  productId?: boolean
  order?: boolean | Prisma.OrderDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["orderDetail"]>

export type OrderDetailSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  unitPrice?: boolean
  quantity?: boolean
  discount?: boolean
  orderId?: boolean
  productId?: boolean
  order?: boolean | Prisma.OrderDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["orderDetail"]>

export type OrderDetailSelectScalar = {
  unitPrice?: boolean
  quantity?: boolean
  discount?: boolean
  orderId?: boolean
  productId?: boolean
}

export type OrderDetailOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"unitPrice" | "quantity" | "discount" | "orderId" | "productId", ExtArgs["result"]["orderDetail"]>
export type OrderDetailInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  order?: boolean | Prisma.OrderDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}
export type OrderDetailIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  order?: boolean | Prisma.OrderDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}
export type OrderDetailIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  order?: boolean | Prisma.OrderDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}

export type $OrderDetailPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "OrderDetail"
  objects: {
    order: Prisma.$OrderPayload<ExtArgs>
    product: Prisma.$ProductPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    unitPrice: number
    quantity: number
    discount: number
    orderId: string
    productId: string
  }, ExtArgs["result"]["orderDetail"]>
  composites: {}
}

export type OrderDetailGetPayload<S extends boolean | null | undefined | OrderDetailDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$OrderDetailPayload, S>

export type OrderDetailCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<OrderDetailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: OrderDetailCountAggregateInputType | true
  }

export interface OrderDetailDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderDetail'], meta: { name: 'OrderDetail' } }
  /**
   * Find zero or one OrderDetail that matches the filter.
   * @param {OrderDetailFindUniqueArgs} args - Arguments to find a OrderDetail
   * @example
   * // Get one OrderDetail
   * const orderDetail = await prisma.orderDetail.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends OrderDetailFindUniqueArgs>(args: Prisma.SelectSubset<T, OrderDetailFindUniqueArgs<ExtArgs>>): Prisma.Prisma__OrderDetailClient<runtime.Types.Result.GetResult<Prisma.$OrderDetailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one OrderDetail that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {OrderDetailFindUniqueOrThrowArgs} args - Arguments to find a OrderDetail
   * @example
   * // Get one OrderDetail
   * const orderDetail = await prisma.orderDetail.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends OrderDetailFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, OrderDetailFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__OrderDetailClient<runtime.Types.Result.GetResult<Prisma.$OrderDetailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first OrderDetail that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrderDetailFindFirstArgs} args - Arguments to find a OrderDetail
   * @example
   * // Get one OrderDetail
   * const orderDetail = await prisma.orderDetail.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends OrderDetailFindFirstArgs>(args?: Prisma.SelectSubset<T, OrderDetailFindFirstArgs<ExtArgs>>): Prisma.Prisma__OrderDetailClient<runtime.Types.Result.GetResult<Prisma.$OrderDetailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first OrderDetail that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrderDetailFindFirstOrThrowArgs} args - Arguments to find a OrderDetail
   * @example
   * // Get one OrderDetail
   * const orderDetail = await prisma.orderDetail.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends OrderDetailFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, OrderDetailFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__OrderDetailClient<runtime.Types.Result.GetResult<Prisma.$OrderDetailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more OrderDetails that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrderDetailFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all OrderDetails
   * const orderDetails = await prisma.orderDetail.findMany()
   * 
   * // Get first 10 OrderDetails
   * const orderDetails = await prisma.orderDetail.findMany({ take: 10 })
   * 
   * // Only select the `unitPrice`
   * const orderDetailWithUnitPriceOnly = await prisma.orderDetail.findMany({ select: { unitPrice: true } })
   * 
   */
  findMany<T extends OrderDetailFindManyArgs>(args?: Prisma.SelectSubset<T, OrderDetailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OrderDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a OrderDetail.
   * @param {OrderDetailCreateArgs} args - Arguments to create a OrderDetail.
   * @example
   * // Create one OrderDetail
   * const OrderDetail = await prisma.orderDetail.create({
   *   data: {
   *     // ... data to create a OrderDetail
   *   }
   * })
   * 
   */
  create<T extends OrderDetailCreateArgs>(args: Prisma.SelectSubset<T, OrderDetailCreateArgs<ExtArgs>>): Prisma.Prisma__OrderDetailClient<runtime.Types.Result.GetResult<Prisma.$OrderDetailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many OrderDetails.
   * @param {OrderDetailCreateManyArgs} args - Arguments to create many OrderDetails.
   * @example
   * // Create many OrderDetails
   * const orderDetail = await prisma.orderDetail.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends OrderDetailCreateManyArgs>(args?: Prisma.SelectSubset<T, OrderDetailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many OrderDetails and returns the data saved in the database.
   * @param {OrderDetailCreateManyAndReturnArgs} args - Arguments to create many OrderDetails.
   * @example
   * // Create many OrderDetails
   * const orderDetail = await prisma.orderDetail.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many OrderDetails and only return the `unitPrice`
   * const orderDetailWithUnitPriceOnly = await prisma.orderDetail.createManyAndReturn({
   *   select: { unitPrice: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends OrderDetailCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, OrderDetailCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OrderDetailPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a OrderDetail.
   * @param {OrderDetailDeleteArgs} args - Arguments to delete one OrderDetail.
   * @example
   * // Delete one OrderDetail
   * const OrderDetail = await prisma.orderDetail.delete({
   *   where: {
   *     // ... filter to delete one OrderDetail
   *   }
   * })
   * 
   */
  delete<T extends OrderDetailDeleteArgs>(args: Prisma.SelectSubset<T, OrderDetailDeleteArgs<ExtArgs>>): Prisma.Prisma__OrderDetailClient<runtime.Types.Result.GetResult<Prisma.$OrderDetailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one OrderDetail.
   * @param {OrderDetailUpdateArgs} args - Arguments to update one OrderDetail.
   * @example
   * // Update one OrderDetail
   * const orderDetail = await prisma.orderDetail.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends OrderDetailUpdateArgs>(args: Prisma.SelectSubset<T, OrderDetailUpdateArgs<ExtArgs>>): Prisma.Prisma__OrderDetailClient<runtime.Types.Result.GetResult<Prisma.$OrderDetailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more OrderDetails.
   * @param {OrderDetailDeleteManyArgs} args - Arguments to filter OrderDetails to delete.
   * @example
   * // Delete a few OrderDetails
   * const { count } = await prisma.orderDetail.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends OrderDetailDeleteManyArgs>(args?: Prisma.SelectSubset<T, OrderDetailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more OrderDetails.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrderDetailUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many OrderDetails
   * const orderDetail = await prisma.orderDetail.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends OrderDetailUpdateManyArgs>(args: Prisma.SelectSubset<T, OrderDetailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more OrderDetails and returns the data updated in the database.
   * @param {OrderDetailUpdateManyAndReturnArgs} args - Arguments to update many OrderDetails.
   * @example
   * // Update many OrderDetails
   * const orderDetail = await prisma.orderDetail.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more OrderDetails and only return the `unitPrice`
   * const orderDetailWithUnitPriceOnly = await prisma.orderDetail.updateManyAndReturn({
   *   select: { unitPrice: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends OrderDetailUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, OrderDetailUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OrderDetailPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one OrderDetail.
   * @param {OrderDetailUpsertArgs} args - Arguments to update or create a OrderDetail.
   * @example
   * // Update or create a OrderDetail
   * const orderDetail = await prisma.orderDetail.upsert({
   *   create: {
   *     // ... data to create a OrderDetail
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the OrderDetail we want to update
   *   }
   * })
   */
  upsert<T extends OrderDetailUpsertArgs>(args: Prisma.SelectSubset<T, OrderDetailUpsertArgs<ExtArgs>>): Prisma.Prisma__OrderDetailClient<runtime.Types.Result.GetResult<Prisma.$OrderDetailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of OrderDetails.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrderDetailCountArgs} args - Arguments to filter OrderDetails to count.
   * @example
   * // Count the number of OrderDetails
   * const count = await prisma.orderDetail.count({
   *   where: {
   *     // ... the filter for the OrderDetails we want to count
   *   }
   * })
  **/
  count<T extends OrderDetailCountArgs>(
    args?: Prisma.Subset<T, OrderDetailCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], OrderDetailCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a OrderDetail.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrderDetailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends OrderDetailAggregateArgs>(args: Prisma.Subset<T, OrderDetailAggregateArgs>): Prisma.PrismaPromise<GetOrderDetailAggregateType<T>>

  /**
   * Group by OrderDetail.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrderDetailGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends OrderDetailGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: OrderDetailGroupByArgs['orderBy'] }
      : { orderBy?: OrderDetailGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, OrderDetailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderDetailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the OrderDetail model
 */
readonly fields: OrderDetailFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for OrderDetail.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__OrderDetailClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  order<T extends Prisma.OrderDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.OrderDefaultArgs<ExtArgs>>): Prisma.Prisma__OrderClient<runtime.Types.Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  product<T extends Prisma.ProductDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProductDefaultArgs<ExtArgs>>): Prisma.Prisma__ProductClient<runtime.Types.Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the OrderDetail model
 */
export interface OrderDetailFieldRefs {
  readonly unitPrice: Prisma.FieldRef<"OrderDetail", 'Float'>
  readonly quantity: Prisma.FieldRef<"OrderDetail", 'Int'>
  readonly discount: Prisma.FieldRef<"OrderDetail", 'Float'>
  readonly orderId: Prisma.FieldRef<"OrderDetail", 'String'>
  readonly productId: Prisma.FieldRef<"OrderDetail", 'String'>
}
    

// Custom InputTypes
/**
 * OrderDetail findUnique
 */
export type OrderDetailFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrderDetail
   */
  select?: Prisma.OrderDetailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrderDetail
   */
  omit?: Prisma.OrderDetailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderDetailInclude<ExtArgs> | null
  /**
   * Filter, which OrderDetail to fetch.
   */
  where: Prisma.OrderDetailWhereUniqueInput
}

/**
 * OrderDetail findUniqueOrThrow
 */
export type OrderDetailFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrderDetail
   */
  select?: Prisma.OrderDetailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrderDetail
   */
  omit?: Prisma.OrderDetailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderDetailInclude<ExtArgs> | null
  /**
   * Filter, which OrderDetail to fetch.
   */
  where: Prisma.OrderDetailWhereUniqueInput
}

/**
 * OrderDetail findFirst
 */
export type OrderDetailFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrderDetail
   */
  select?: Prisma.OrderDetailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrderDetail
   */
  omit?: Prisma.OrderDetailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderDetailInclude<ExtArgs> | null
  /**
   * Filter, which OrderDetail to fetch.
   */
  where?: Prisma.OrderDetailWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OrderDetails to fetch.
   */
  orderBy?: Prisma.OrderDetailOrderByWithRelationInput | Prisma.OrderDetailOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for OrderDetails.
   */
  cursor?: Prisma.OrderDetailWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OrderDetails from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OrderDetails.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of OrderDetails.
   */
  distinct?: Prisma.OrderDetailScalarFieldEnum | Prisma.OrderDetailScalarFieldEnum[]
}

/**
 * OrderDetail findFirstOrThrow
 */
export type OrderDetailFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrderDetail
   */
  select?: Prisma.OrderDetailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrderDetail
   */
  omit?: Prisma.OrderDetailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderDetailInclude<ExtArgs> | null
  /**
   * Filter, which OrderDetail to fetch.
   */
  where?: Prisma.OrderDetailWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OrderDetails to fetch.
   */
  orderBy?: Prisma.OrderDetailOrderByWithRelationInput | Prisma.OrderDetailOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for OrderDetails.
   */
  cursor?: Prisma.OrderDetailWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OrderDetails from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OrderDetails.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of OrderDetails.
   */
  distinct?: Prisma.OrderDetailScalarFieldEnum | Prisma.OrderDetailScalarFieldEnum[]
}

/**
 * OrderDetail findMany
 */
export type OrderDetailFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrderDetail
   */
  select?: Prisma.OrderDetailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrderDetail
   */
  omit?: Prisma.OrderDetailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderDetailInclude<ExtArgs> | null
  /**
   * Filter, which OrderDetails to fetch.
   */
  where?: Prisma.OrderDetailWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OrderDetails to fetch.
   */
  orderBy?: Prisma.OrderDetailOrderByWithRelationInput | Prisma.OrderDetailOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing OrderDetails.
   */
  cursor?: Prisma.OrderDetailWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OrderDetails from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OrderDetails.
   */
  skip?: number
  distinct?: Prisma.OrderDetailScalarFieldEnum | Prisma.OrderDetailScalarFieldEnum[]
}

/**
 * OrderDetail create
 */
export type OrderDetailCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrderDetail
   */
  select?: Prisma.OrderDetailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrderDetail
   */
  omit?: Prisma.OrderDetailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderDetailInclude<ExtArgs> | null
  /**
   * The data needed to create a OrderDetail.
   */
  data: Prisma.XOR<Prisma.OrderDetailCreateInput, Prisma.OrderDetailUncheckedCreateInput>
}

/**
 * OrderDetail createMany
 */
export type OrderDetailCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many OrderDetails.
   */
  data: Prisma.OrderDetailCreateManyInput | Prisma.OrderDetailCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * OrderDetail createManyAndReturn
 */
export type OrderDetailCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrderDetail
   */
  select?: Prisma.OrderDetailSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the OrderDetail
   */
  omit?: Prisma.OrderDetailOmit<ExtArgs> | null
  /**
   * The data used to create many OrderDetails.
   */
  data: Prisma.OrderDetailCreateManyInput | Prisma.OrderDetailCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderDetailIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * OrderDetail update
 */
export type OrderDetailUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrderDetail
   */
  select?: Prisma.OrderDetailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrderDetail
   */
  omit?: Prisma.OrderDetailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderDetailInclude<ExtArgs> | null
  /**
   * The data needed to update a OrderDetail.
   */
  data: Prisma.XOR<Prisma.OrderDetailUpdateInput, Prisma.OrderDetailUncheckedUpdateInput>
  /**
   * Choose, which OrderDetail to update.
   */
  where: Prisma.OrderDetailWhereUniqueInput
}

/**
 * OrderDetail updateMany
 */
export type OrderDetailUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update OrderDetails.
   */
  data: Prisma.XOR<Prisma.OrderDetailUpdateManyMutationInput, Prisma.OrderDetailUncheckedUpdateManyInput>
  /**
   * Filter which OrderDetails to update
   */
  where?: Prisma.OrderDetailWhereInput
  /**
   * Limit how many OrderDetails to update.
   */
  limit?: number
}

/**
 * OrderDetail updateManyAndReturn
 */
export type OrderDetailUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrderDetail
   */
  select?: Prisma.OrderDetailSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the OrderDetail
   */
  omit?: Prisma.OrderDetailOmit<ExtArgs> | null
  /**
   * The data used to update OrderDetails.
   */
  data: Prisma.XOR<Prisma.OrderDetailUpdateManyMutationInput, Prisma.OrderDetailUncheckedUpdateManyInput>
  /**
   * Filter which OrderDetails to update
   */
  where?: Prisma.OrderDetailWhereInput
  /**
   * Limit how many OrderDetails to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderDetailIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * OrderDetail upsert
 */
export type OrderDetailUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrderDetail
   */
  select?: Prisma.OrderDetailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrderDetail
   */
  omit?: Prisma.OrderDetailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderDetailInclude<ExtArgs> | null
  /**
   * The filter to search for the OrderDetail to update in case it exists.
   */
  where: Prisma.OrderDetailWhereUniqueInput
  /**
   * In case the OrderDetail found by the `where` argument doesn't exist, create a new OrderDetail with this data.
   */
  create: Prisma.XOR<Prisma.OrderDetailCreateInput, Prisma.OrderDetailUncheckedCreateInput>
  /**
   * In case the OrderDetail was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.OrderDetailUpdateInput, Prisma.OrderDetailUncheckedUpdateInput>
}

/**
 * OrderDetail delete
 */
export type OrderDetailDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrderDetail
   */
  select?: Prisma.OrderDetailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrderDetail
   */
  omit?: Prisma.OrderDetailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderDetailInclude<ExtArgs> | null
  /**
   * Filter which OrderDetail to delete.
   */
  where: Prisma.OrderDetailWhereUniqueInput
}

/**
 * OrderDetail deleteMany
 */
export type OrderDetailDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which OrderDetails to delete
   */
  where?: Prisma.OrderDetailWhereInput
  /**
   * Limit how many OrderDetails to delete.
   */
  limit?: number
}

/**
 * OrderDetail without action
 */
export type OrderDetailDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrderDetail
   */
  select?: Prisma.OrderDetailSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrderDetail
   */
  omit?: Prisma.OrderDetailOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderDetailInclude<ExtArgs> | null
}
