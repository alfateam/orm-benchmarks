name: Node.js CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches: 
      - '**'

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: ["node:20-alpine"]
    container:
      image: ${{ matrix.container }}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      # mssql:
      #   image: mcr.microsoft.com/mssql/server:2019-latest
      #   env:
      #     SA_PASSWORD: P@assword123
      #     ACCEPT_EULA: 'Y'
      #   ports:
      #     - 1433:1433

      # mysql:
      #   image: mysql:8.0.31
      #   env:
      #     MYSQL_DATABASE: test
      #     MYSQL_USER: test
      #     MYSQL_PASSWORD: test
      #     MYSQL_ROOT_PASSWORD: test
      #   ports:
      #     - 3306:3306
      #   options: >-
      #     --health-cmd="mysqladmin ping" 
      #     --health-interval=10s 
      #     --health-timeout=5s 
      #     --health-retries=3

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run init
      - run: npm run drizzle
      - run: npm run orange